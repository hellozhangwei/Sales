<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">

    <service verb="create" noun="Task">
        <in-parameters>
            <parameter name="workEffortId"><matches regexp="[A-Za-z0-9]{1,8}"
                    message="Project ID must be only letters and digits and between 1 and 8 characters long"/></parameter>
            <auto-parameters entity-name="mantle.work.effort.WorkEffort" include="nonpk"/>
            <parameter name="workEffortName" required="true"/>
            <parameter name="estimatedStartDate" type="Timestamp" format="yyyy-MM-dd"/>
            <parameter name="estimatedCompletionDate" type="Timestamp" format="yyyy-MM-dd"/>
            <parameter name="workEffortTypeEnumId" default-value="WetTask"/>
            <parameter name="statusId" default-value="WeInPlanning"/>

            <parameter name="accountPartyId" required="true"/>

            <parameter name="assignToPartyId"/>
            <parameter name="assignRoleTypeId" default-value="Assignee"/>
            <parameter name="assignStatusId" default-value="WeptAssigned"/>
        </in-parameters>
        <out-parameters><parameter name="workEffortId"/></out-parameters>
        <actions>
            <if condition="estimatedStartDate != null &amp;&amp; estimatedCompletionDate != null &amp;&amp;
                           estimatedCompletionDate &lt; estimatedStartDate">
                <return error="true" message="Date range is not valid."/>
            </if>
            <service-call name="create#mantle.work.effort.WorkEffort" out-map="context" in-map="context"/>
            <if condition="ec.user.userAccount?.partyId">
                <service-call name="create#mantle.work.effort.WorkEffortParty"
                              in-map="[workEffortId:workEffortId, partyId:ec.user.userAccount.partyId,
                            roleTypeId:'Assignee', fromDate:ec.user.nowTimestamp, statusId:'WeptAssigned']"/>
            </if>
            <service-call name="create#mantle.work.effort.WorkEffortParty" in-map="[workEffortId:workEffortId,
                        partyId:accountPartyId, roleTypeId:'Customer', fromDate:ec.user.nowTimestamp]"/>
            <if condition="assignToPartyId">
                <service-call name="create#mantle.work.effort.WorkEffortParty" in-map="[workEffortId:workEffortId, partyId:assignToPartyId,
                        roleTypeId:'assignRoleTypeId', fromDate:ec.user.nowTimestamp, statusId:assignStatusId]"/>
            </if>
        </actions>
    </service>
    <service verb="update" noun="Task">
        <in-parameters>
            <parameter name="workEffortId" required="true"/>
            <auto-parameters entity-name="mantle.work.effort.WorkEffort" include="nonpk">
                <exclude field-name="rootWorkEffortId"/></auto-parameters>
            <parameter name="estimatedStartDate" type="Timestamp" format="yyyy-MM-dd"/>
            <parameter name="estimatedCompletionDate" type="Timestamp" format="yyyy-MM-dd"/>

            <parameter name="clientPartyId"/>
            <parameter name="clientBillingPartyId"/>
            <parameter name="clientManagerPartyId"/>
            <parameter name="vendorPartyId"/>
            <parameter name="managerPartyId"/>
        </in-parameters>
        <actions>
            <entity-find entity-name="mantle.work.effort.WorkEffort" list="tasksList">
                <econdition field-name="rootWorkEffortId" from="workEffortId"/>
            </entity-find>
            <if condition="estimatedStartDate != null &amp;&amp; estimatedCompletionDate != null &amp;&amp;
                           estimatedCompletionDate &lt; estimatedStartDate">
                <return error="true" message="Project date range is not valid."/>
            </if>
            <iterate list="tasksList" entry="task">
                <if condition="estimatedStartDate &amp;&amp; task.actualStartDate &amp;&amp; estimatedStartDate &gt; task.actualStartDate">
                    <return error="true" message="Project's new start date puts one or more tasks out of date range."/>
                </if>
                <if condition="estimatedCompletionDate &amp;&amp; task.actualStartDate &amp;&amp; estimatedCompletionDate &lt; task.actualStartDate">
                    <return error="true" message="Project's new end date puts one or more tasks out of date range."/>
                </if>
            </iterate>
            <if condition="!taskList">
                <entity-find entity-name="mantle.work.time.TimeEntry" list="timeEntryList">
                    <econdition field-name="workEffortId"/>
                </entity-find>
                <iterate list="timeEntryList" entry="timeEntry">
                    <if condition="estimatedStartDate &amp;&amp; timeEntry.fromDate &amp;&amp; estimatedStartDate &gt; timeEntry.fromDate">
                        <return error="true" message="Project's new start date puts one or more time entries out of date range."/>
                    </if>
                    <if condition="estimatedCompletionDate &amp;&amp; timeEntry.fromDate &amp;&amp; estimatedCompletionDate &lt; timeEntry.fromDate">
                        <return error="true" message="Project's new end date puts one or more time entries out of date range."/>
                    </if>
                </iterate>
            </if>
            <service-call name="update#mantle.work.effort.WorkEffort" out-map="context" in-map="context"/>

            <if condition="clientPartyId">
                <service-call name="mantle.work.WorkEffortServices.replace#WorkEffortParty"
                        in-map="[workEffortId:workEffortId, roleTypeId:'Customer', newPartyId:clientPartyId]"/>
            </if>
            <if condition="clientBillingPartyId">
                <service-call name="mantle.work.WorkEffortServices.replace#WorkEffortParty"
                        in-map="[workEffortId:workEffortId, roleTypeId:'ClientBilling',newPartyId:clientBillingPartyId, statusId:'WeptAssigned']"/>
            </if>
            <if condition="clientManagerPartyId">
                <service-call name="mantle.work.WorkEffortServices.replace#WorkEffortParty"
                        in-map="[workEffortId:workEffortId, roleTypeId:'ClientManager', newPartyId:clientManagerPartyId, statusId:'WeptAssigned']"/>
            </if>
            <if condition="vendorPartyId">
                <service-call name="mantle.work.WorkEffortServices.replace#WorkEffortParty"
                        in-map="[workEffortId:workEffortId, roleTypeId:'Vendor', newPartyId:vendorPartyId, statusId:'WeptAssigned']"/>
            </if>
            <if condition="managerPartyId">
                <service-call name="mantle.work.WorkEffortServices.replace#WorkEffortParty"
                        in-map="[workEffortId:workEffortId, roleTypeId:'Manager', newPartyId:managerPartyId, statusId:'WeptAssigned']"/>
            </if>
        </actions>
    </service>
    <service verb="get" noun="BlogPosts">
        <in-parameters>
            <parameter name="wikiSpaceId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="blogList" type="List"/>
        </out-parameters>
        <actions>
            <entity-find entity-name="moqui.resource.wiki.WikiBlogFindView" list="blogList">
                <search-form-inputs default-order-by="-publishDate"/>
                <select-field field-name="wikiBlogId,wikiPageId,wikiSpaceId,pagePath,author,publishDate,title,summary"/>
            </entity-find>
        </actions>
    </service>
    <service verb="get" noun="PublishedWikiPageText">
        <in-parameters>
            <parameter name="wikiSpaceId" required="true"/>
            <parameter name="pagePath" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="pageText"/>
        </out-parameters>
        <actions>
            <service-call name="org.moqui.impl.WikiServices.get#PublishedWikiPageText" out-map="wikiPage">
                <field-map field-name="wikiSpaceId" from="wikiSpaceId"/>
                <field-map field-name="pagePath" from="pagePath"/>
            </service-call>
            <set field="pageText" from="wikiPage.pageText"/>
        </actions>
    </service>
    <service verb="create" noun="Opportunity">
        <in-parameters>
            <parameter name="accountPartyId"/>
            <parameter name="partyId"/>
            <parameter name="opportunityName"/>
            <parameter name="currencyUomId"/>
            <parameter name="estimatedAmount"/>
            <parameter name="estimatedCloseDate"/>
            <parameter name="description"/>
        </in-parameters>
        <out-parameters>
            <parameter name="salesOpportunityId"/>
        </out-parameters>
        <actions>
            <!-- create Opportunity and Assign Sales Person -->
            <service-call name="create#mantle.sales.opportunity.SalesOpportunity" in-map="context" out-map="newSalesOpportunityOut"/>
            <set field="salesOpportunityId" from="newSalesOpportunityOut.salesOpportunityId"/>
            <if condition="partyId">
                <service-call name="create#mantle.sales.opportunity.SalesOpportunityParty" in-map="context + [roleTypeId:'SalesRepresentative']"/>
            </if>
        </actions>
    </service>
    <service verb="search" noun="Opportunity">
        <in-parameters>
            <parameter name="anyField"/>
            <parameter name="accountPartyId"/>
            <parameter name="name"/>
            <parameter name="partyId"/>
        </in-parameters>
        <out-parameters>
            <parameter name="queryString"/>
            <parameter name="documentList" type="List"><parameter name="document" type="Map"/></parameter>
            <parameter name="documentListCount" type="Integer"/>
            <parameter name="documentListPageIndex" type="Integer"/>
            <parameter name="documentListPageSize" type="Integer"/>
            <parameter name="documentListPageMaxIndex" type="Integer"/>
            <parameter name="documentListPageRangeLow" type="Integer"/>
            <parameter name="documentListPageRangeHigh" type="Integer"/>
        </out-parameters>
        <actions>
            <set field="indexName" value="mantle_sales_oppy"/>
            <set field="documentType" value="MantleSalesOpportunity"/>
            <!-- Build the query string based on input parameters -->
            <if condition="accountPartyId">
                    <set field="queryString" from="(queryString ? queryString + ' AND ' : '' ) + 'accountPartyId:' + accountPartyId"/>
            </if>
            <if condition="name">
                <set field="queryString" from="(queryString ? queryString + ' AND ' : '' ) + 'name:' + name"/>
            </if>
            <if condition="partyId">
                <set field="queryString" from="(queryString ? queryString + ' AND ' : '' ) + 'SalesOpportunityParty.partyId:' + partyId"/>
            </if>
            <!--<set field="queryString" value="*"/>-->
            <!-- The following is taken from search#Party to enforce org security -->
            <!-- if we have activeOrgId or filterOrgIds see if user has active org or user org filters -->
            <set field="activeOrgId" from="ec.user.context?.activeOrgId"/>
            <set field="filterOrgIds" from="ec.user.context?.filterOrgIds"/>
            <!-- NOTE: using entityFilterSetId is a hack that only works for these 'standard' filter sets, would be
                better to pick apart filterMap to see what's used, but this is specific to activeOrgId and filterOrgIds anyway -->
            <set field="findFilters" from="ec.artifactExecution.getFindFiltersForUser('mantle.party.Party')"/>
            <if condition="findFilters"><set field="entityFilterSetId" from="findFilters[0].entityFilterSetId"/></if>
            <script><![CDATA[
                if (queryString) {
                    if ('MANTLE_USER_ORG'.equals(entityFilterSetId)) {
                        queryString = (queryString ? queryString + ' AND ' : '' ) + 'ownerPartyId:(' + (filterOrgIds ? filterOrgIds.join(' OR ') + ' OR ' : '') + '_NA_)'
                    } else if ('MANTLE_ACTIVE_ORG'.equals(entityFilterSetId) && activeOrgId) {
                        queryString = (queryString ? queryString + ' AND ' : '' ) + 'ownerPartyId:(' + activeOrgId + ' OR _NA_)'
                    }
                }
            ]]></script>
            <if condition="!queryString"><set field="queryString" value="*:*"/></if>
                <!--<service-call name="org.moqui.search.SearchServices.search#DataDocuments" out-map="context" in-map="context"/>-->
                <service-call name="org.moqui.search.SearchServices.search#DataDocuments" out-map="context"
                              in-map="[indexName:indexName, documentType:documentType, queryString:queryString,orderByFields:orderByFields, highlightFields:highlightFields, nestedQueryMap:nestedQueryMap,
                             pageIndex:pageIndex, pageSize:pageSize, pageNoLimit:pageNoLimit]"/>
                <!-- The following call is taken from PartyServices search#Party.
                    The "flattenDocument:false" causes Sales Person (partyId) to not be displayed. Not sure why.
                <service-call name="org.moqui.search.SearchServices.search#DataDocuments" out-map="context"
                              in-map="[indexName:indexName, documentType:documentType, queryString:queryString, flattenDocument:false,
                             orderByFields:orderByFields, highlightFields:highlightFields, nestedQueryMap:nestedQueryMap,
                             pageIndex:pageIndex, pageSize:pageSize, pageNoLimit:pageNoLimit]"/>
                -->
        </actions>
    </service>
</services>
